{"version":3,"sources":["logo.svg","Prooduct.js","SignIn.js","Nav.js","SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Prooduct","submitHandler","event","preventDefault","l","target","elements","topicBox","value","setState","list","state","reset","console","log","className","onSubmit","this","type","name","placeholder","map","e","key","index","Component","SignIn","props","axios","post","then","catch","changeHandler","email","pswd","method","src","logo","alt","width","height","id","required","onChange","Nav","to","SignUp","fname","lname","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.60c8ed12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nclass Prooduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topicBox: null,\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    var l = event.target.elements.topicBox.value;\r\n    this.setState({\r\n      list: [...this.state.list, l],\r\n    });\r\n    event.target.reset();\r\n    console.log(this.state.list);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-sm\">\r\n        <form onSubmit={this.submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"topicBox\"\r\n            placeholder=\"Enter topic here...\"\r\n          />\r\n\r\n          <button className=\"badge-primary\" type=\"submit\">\r\n            Publish\r\n          </button>\r\n        </form>\r\n        <table className>\r\n          <th>Todos</th>\r\n          {this.state.list.map((e) => (\r\n            <tr className=\"alert alert-primary\" key={e.index}>\r\n              {e}\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prooduct;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./signin.css\";\r\nimport axios from \"axios\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      pswd: \"\",\r\n    };\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8080/person/signin\", this.state)\r\n      .then((e) => {\r\n        console.log(e);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, pswd } = this.state;\r\n    return (\r\n      <div className=\"text-center\">\r\n        <form\r\n          className=\"form-signin\"\r\n          method=\"post\"\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img className=\"mb-4\" src={logo} alt=\"\" width=\"72\" height=\"72\" />\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n          <label className=\"sr-only\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"inputEmail\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email address\"\r\n            required\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <label className=\"sr-only\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"inputPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            required\r\n            name=\"pswd\"\r\n            value={pswd}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <div className=\"checkbox mb-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n            </label>\r\n          </div>\r\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n            Sign in\r\n          </button>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2017-2020</p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <Link to=\"/signin\">\r\n              <li>signin</li>\r\n            </Link>\r\n            <Link to=\"/product\">\r\n              <li>product</li>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <li>signup</li>\r\n            </Link>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./signin.css\";\r\nimport axios from \"axios\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      email: \"\",\r\n      pswd: \"\",\r\n      lname: \"\",\r\n    };\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8080/persons/signup\", this.state)\r\n      .then((e) => {\r\n        console.log(e);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  render() {\r\n    const { email, fname, pswd, lname } = this.state;\r\n    return (\r\n      <div>\r\n        <form\r\n          className=\"form-signin\"\r\n          method=\"post\"\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img className=\"mb-4\" src={logo} alt=\"\" width=\"72\" height=\"72\" />\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please Register here</h1>\r\n          <label className=\"sr-only\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First Name\"\r\n            required\r\n            name=\"fname\"\r\n            value={fname}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <label className=\"sr-only\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Last Name\"\r\n            required\r\n            name=\"lname\"\r\n            value={lname}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <label className=\"sr-only\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"inputEmail\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email address\"\r\n            required\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <label className=\"sr-only\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"inputPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            required\r\n            name=\"pswd\"\r\n            value={pswd}\r\n            onChange={this.changeHandler}\r\n          />\r\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n            Sign up\r\n          </button>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2017-2020</p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\n// import \"./App.css\";\nimport Prooduct from \"./Prooduct\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SignIn from \"./SignIn\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport SignUp from \"./SignUp\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/product\" component={Prooduct} />\n          <Route path=\"/signup\" component={SignUp} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nconst Home = () => (\n  <div>\n    <h1>This is Homepage</h1>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}